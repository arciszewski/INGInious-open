#!/bin/python3

# character stuffing, q1 sending A,B,C
# expected output:  DLE,STX,A,B,C,DLE,ETX
from inginious import input, feedback

valid="DLE,STX,A,B,C,DLE,ETX"
begin="DLE,STX"
end="DLE,ETX"
payload="A,B,C"
grade=0
answer = input.get_input("q1")
answer = ''.join(answer.split()) # remove spaces
answer = answer.upper()  # to upper case
if (answer==valid):
	feedback.set_problem_result("success","q1")
	feedback.set_problem_feedback("Correct","q1")
	grade+=33    
else:
	feedback.set_problem_result("failed","q1")
	response="Your answer to the first question is incorrect.\n"
	if not(answer.startswith(begin)):
		response+="A valid frame always starts with "+begin+" \n"
	if not(answer.endswith(end)):
		response+="A valid frame always ends with "+end+"\n"
	if not(payload in answer):
		response+="Your frame must contain the payload \n"
	feedback.set_problem_feedback(response,"q1")
    
    
# A,DLE,STX,B,DLE,ETX,C

valid="DLE,STX,A,DLE,DLE,STX,B,DLE,DLE,ETX,C,DLE,ETX"
begin="DLE,STX"
end="DLE,ETX"
payload="DLE,DLE"
answer = input.get_input("q2")
answer = ''.join(answer.split()) # remove spaces
answer = answer.upper()  # to upper case
if (answer==valid):
	feedback.set_problem_result("success","q2")
	feedback.set_problem_feedback("Correct","q2")
	grade+=33    
else:
	feedback.set_problem_result("failed","q2")
	response="Your answer to the second question is incorrect.\n"
	if not(answer.startswith(begin)):
		response+="A valid frame always starts with "+begin+" \n"
	if not(answer.endswith(end)):
		response+="A valid frame always ends with "+end+"\n"
	if not(payload in answer):
		response+="A sender that uses character stuffing must add a DLE after each DLE character found in the frame. Your answer does not contain such added DLEs. \n"
	feedback.set_problem_feedback(response,"q2")

# Q3 DLE,DLE,STX,B,DLE,ETX,ETX

valid="DLE,STX,DLE,DLE,DLE,DLE,STX,B,DLE,DLE,ETX,ETX,DLE,ETX"
begin="DLE,STX"
end="DLE,ETX"
payload="DLE,DLE,DLE"
answer = input.get_input("q3")
answer = ''.join(answer.split()) # remove spaces
answer = answer.upper()  # to upper case
if (answer==valid):
	feedback.set_problem_result("success","q3")
	feedback.set_problem_feedback("Correct","q3")
	grade+=34    
else:
	feedback.set_problem_result("failed","q3")
	response="Your answer to the second question is incorrect.\n"
	if not(answer.startswith(begin)):
		response+="A valid frame always starts with "+begin+" \n"
	if not(answer.endswith(end)):
		response+="A valid frame always ends with "+end+"\n"
	if not(payload in answer):
		response+="A sender that uses character stuffing must add a DLE after each DLE character found in the frame. Your answer does not contain such added DLEs. \n"
	feedback.set_problem_feedback(response,"q3")


feedback.set_grade(grade) 

if grade==100:
	feedback.set_global_result("success")
else:
	feedback.set_global_result("failed")
#end
    