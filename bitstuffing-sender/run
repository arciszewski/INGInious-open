#!/bin/python3

# bit stuffing, question 1 sending 0001010010010010010010011
# expected output:  01111110000101001001001001001001101111110
from inginious import input, feedback

grade=0

valid="01111110000101001001001001001001101111110"
boundary="01111110"
payload="0001010010010010010010011"
answer = input.get_input("question1")
answer = ''.join(answer.split()) # remove spaces
if (answer==valid):
	feedback.set_problem_result("success","question1")
	feedback.set_problem_feedback("Correct","question1")
	grade+=50    
else:
	feedback.set_problem_result("failed","question1")
	response="Your answer to the first question is incorrect.\n"
	if not(answer.startswith(boundary)):
		response+="A valid frame always starts with the frame boundary byte (01111110).\n"
	if not(answer.endswith(boundary)):
		response+="A valid frame always ends with the frame boundary byte (01111110).\n"
	if not(payload in answer):
		response+="Your frame must contain the payload \n"
	feedback.set_problem_feedback(response,"question1")
    
    
valid="0111111001111101001111101001111110"
boundary="01111110"
answer = input.get_input("question2")
answer = ''.join(answer.split()) # remove spaces
if (answer==valid):
	feedback.set_problem_result("success","question2")
	feedback.set_problem_feedback("Correct","question2")
	grade+=50    
else:
	feedback.set_problem_result("failed","question2")
	response="Your answer to the second question is incorrect.\n"
	if not(answer.startswith(boundary)):
		response+="A valid frame always starts with the frame boundary byte (01111110).\n"
	if not(answer.endswith(boundary)):
		response+="A valid frame always ends with the frame boundary byte (01111110).\n"
	feedback.set_problem_feedback(response,"question2")
    

if grade==100:
	feedback.set_global_result("success")
else:
	feedback.set_global_result("failed")
    
    
#end
    